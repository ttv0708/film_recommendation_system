#BlueJ class context
comment0.target=FourthRatings
comment0.text=\r\n\ Class\ created\ for\ this\ assignment\ StepFour\r\n\ \r\n\ @author\ (Abraham\ Ferrero)\ \r\n\ @version\ (29/1/2018)\r\n
comment1.params=
comment1.target=FourthRatings()
comment10.params=id\ numSimilarRaters\ minimalRaters
comment10.target=java.util.ArrayList\ getSimilarRatings(java.lang.String,\ int,\ int)
comment11.params=id\ numSimilarRaters\ minimalRaters\ filterCriteria
comment11.target=java.util.ArrayList\ getSimilarRatingsByFilter(java.lang.String,\ int,\ int,\ Filter)
comment2.params=ratingsfile
comment2.target=FourthRatings(java.lang.String)
comment3.params=rater_id
comment3.target=Rater\ getRater(java.lang.String)
comment4.params=
comment4.target=int\ getRaterSize()
comment5.params=id\ minimalRaters
comment5.target=double\ getAverageByID(java.lang.String,\ int)
comment6.params=minimalRaters
comment6.target=java.util.ArrayList\ getAverageRatings(int)
comment7.params=minimalRaters\ filterCriteria
comment7.target=java.util.ArrayList\ getAverageRatingsByFilter(int,\ Filter)
comment8.params=me\ r
comment8.target=double\ dotProduct(Rater,\ Rater)
comment8.text=The\ following\ method\ works\ as\ required\ even\ though\ I\ don't\ think\ it\ is\ the\ most\ efficient\ code\r\n\ we\ could\ build.\ I\ had\ to\ create\ a\ new\ ArrayList\ to\ be\ able\ to\ iterate\ over\ an\ "i"\ loop\ twice,\r\n\ which\ it\ might\ make\ it\ quite\ clumsy.\ It\ works\ though,\ and\ perfectly.\ I\ also\ commented\ out\ every\r\nprint\ statement\ I\ use\ for\ testing\ to\ make\ debugging\ easier\ if\ necessary.
comment9.params=id
comment9.target=java.util.ArrayList\ getSimilarities(java.lang.String)
numComments=12
